---

- name: copy mongo conf files
  become_user: "{{ autoid_user }}"
  copy:
    src: mongo.conf
    dest: "{{ home_dir }}/mongo"
    mode: '0755'

- name: Update mongo conf
  become_user: "{{ autoid_user }}"
  replace:
    path: '{{ home_dir }}/mongo/mongo.conf'
    regexp: "{{ item }}"
    replace: "{{ myip }}"
  with_items:
  - '#ip#'

- name: Update mongo conf home dir
  become_user: "{{ autoid_user }}"
  replace:
    path: '{{ home_dir }}/mongo/mongo.conf'
    regexp: "{{ item }}"
    replace: "{{ home_dir }}"
  with_items:
  - '#home#'

- name: install python3.8
  yum:
    name: python3.9
    state: present
    update_cache: true
  become: true

- name: check Python3.9
  become: yes
  ansible.builtin.stat:
    path: "/usr/bin/python3.9"
  register: check_python

- name: Install pymongo
  become: yes
  shell:
    python3.9 -m pip install pymongo
  when: check_python.stat.exists

- name: Get running processes of mongo
  shell: "ps -ef | grep -v grep | grep -w mongo | awk '{print $2}'"
  register: running_processes

- name: Kill running processes
  shell: "kill {{ item }}"
  with_items: "{{ running_processes.stdout_lines }}"

- name: Start mongo
  become_user: "{{ autoid_user }}"
  environment:
          PATH: $PATH:/usr/local/bin
  ansible.builtin.shell: mongod --dbpath "{{ home_dir }}"/mongo/mongodb --logpath "{{ home_dir }}"/mongo/mongod.log --fork

- name: run monog_user.sh
  become_user: "{{ autoid_user }}"
  shell: "{{ install_dir }}/mongo_user.sh "

- name: Get running processes of mongo
  shell: "ps -ef | grep -v grep | grep -w mongo | awk '{print $2}'"
  register: running_processes

- name: Kill running processes
  shell: "kill {{ item }}"
  with_items: "{{ running_processes.stdout_lines }}"


- name: copy showcase file
  become_user: "{{ autoid_user }}"
  copy:
    src: showcase_data.zip
    dest: "{{ home_dir }}"
    owner: "{{ autoid_user }}"
    group: "{{ autoid_group }}"

- name: check certs install for mongo
  become: yes
  ansible.builtin.stat:
    path: "{{ home_dir }}/mongo/certs/ca.pem"
  register: check_mongo_cert

- name: mongo old cert files remove
  become: yes
  shell: rm "{{ home_dir }}"/mongo/certs/*.*
  when: check_mongo_cert.stat.exists

- name: Install certs for mongo
  import_tasks: mongo_certs.yml

